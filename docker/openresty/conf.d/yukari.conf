server {
    listen       80;
    server_name  yukari.kelu.org;

    access_log off;
    error_log  off;

    return 301 https://yukari.kelu.org$request_uri;
}


server {
    listen       8443;
    server_name  yukari.kelu.org;

    access_log /log/yukari.nginx.maintain.access.log;
    error_log  /log/yukari.nginx.maintain.error.log;

    ssl on;
    ssl_certificate /etc/letsencrypt/live/yukari.kelu.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/yukari.kelu.org/privkey.pem;
    ssl_session_timeout 5m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers AESGCM:ALL:!DH:!EXPORT:!RC4:+HIGH:!MEDIUM:!LOW:!aNULL:!eNULL;
    ssl_prefer_server_ciphers on;

    root         /var/www/html/maintain;

    location ~ .*\.(gif|jpg|jpeg|bmp|png|ico|txt|js|css)$   
    {
      root         /var/www/html/maintain;
      expires      7d; 
    }

    error_page 404 500 502 503 504 /index.html;
}

server {
    listen       443;
    server_name  yukari.kelu.org;

    access_log /log/yukari.nginx.access.log;
    error_log  /log/yukari.nginx.error.log;

    ssl on;
    ssl_certificate /etc/letsencrypt/live/yukari.kelu.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/yukari.kelu.org/privkey.pem;
    ssl_session_timeout 5m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers AESGCM:ALL:!DH:!EXPORT:!RC4:+HIGH:!MEDIUM:!LOW:!aNULL:!eNULL;
    ssl_prefer_server_ciphers on;

    root         /var/www/html/public;

    error_page 404 500 502 503 504 /index.html;

    location = / {
        fastcgi_pass                               unix:/sock/www.sock;
        fastcgi_index                              index.php;
        include                                    fastcgi.conf;
    }

    location = /_status {
        fastcgi_pass                               unix:/sock/www.sock;
        include                                    fastcgi.conf;
        fastcgi_param           SCRIPT_NAME        /_status;
    }

    location / {
        # URLs to attempt, including pretty ones.
        try_files   $uri $uri/ /index.php?$query_string;
    }

    # Remove trailing slash to please routing system.
    if (!-d $request_filename) {
        rewrite     ^/(.+)/$ /$1 permanent;
    }

    location ~* ^(.+\.php)(.*)$ {
        # limit_req zone=req_perip burst=8;
        fastcgi_pass                               unix:/sock/www.sock;
        fastcgi_split_path_info                    ^(.+\.php)(.*)$;
        include                                    fastcgi.conf;
    }

    location /nginx_status {
       stub_status on;
       access_log off;
    }
}
